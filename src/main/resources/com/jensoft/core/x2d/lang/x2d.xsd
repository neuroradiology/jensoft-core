<?xml version="1.0" encoding="UTF-8" ?>
<xsd:schema xmlns="http://www.jensoft.org/jensoft/schema/x2d"
	xmlns:xsd="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.jensoft.org/jensoft/schema/x2d"
	elementFormDefault="qualified" attributeFormDefault="unqualified">

	<xsd:import namespace="http://www.w3.org/XML/1998/namespace" />

	<xsd:element name="view2d" type="View2D" />

	<xsd:complexType name="SourceFunction" abstract="true">
		<xsd:sequence>
			<xsd:element name="name" type="xsd:string" />
			<xsd:element name="id" type="xsd:string" />
		</xsd:sequence>
	</xsd:complexType>

	<xsd:simpleType name="Source">
		<xsd:list itemType="xsd:double" />
	</xsd:simpleType>

	<xsd:complexType name="AffineSourceFunction">
		<xsd:complexContent>
			<xsd:extension base="SourceFunction">
				<xsd:sequence>
					<xsd:element name="source-x" type="Source" />
					<xsd:element name="source-y" type="Source" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="InterpolateSourceFunction">
		<xsd:complexContent>
			<xsd:extension base="AffineSourceFunction">
				<xsd:sequence>
					<xsd:element name="delta" type="xsd:double" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="RegressionSourceFunction">
		<xsd:complexContent>
			<xsd:extension base="AffineSourceFunction">
				<xsd:sequence>
					<xsd:element name="delta" type="xsd:double" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<!-- Defines Glyph -->
	<xsd:complexType name="Glyph">
		<xsd:sequence>
			<xsd:element name="x-value" type="xsd:double" />
			<xsd:element name="text" type="xsd:string" />
			<xsd:element name="divergence" type="xsd:double"
				minOccurs="0" />
			<xsd:element name="style" minOccurs="0" default="default">
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="tangent" />
						<xsd:enumeration value="radial" />
						<xsd:enumeration value="default" />
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:element>
			<xsd:element name="color-1" type="Color" minOccurs="1" />
			<xsd:element name="color-2" type="Color" minOccurs="0" />
			<xsd:element name="marker" type="GlyphMarker" minOccurs="0" />
		</xsd:sequence>
	</xsd:complexType>

	<!-- Defines Abstract Glyph Marker -->
	<xsd:complexType name="GlyphMarker" abstract="true">
		<xsd:sequence>
		</xsd:sequence>
	</xsd:complexType>

	<!-- Defines Round Glyph Marker -->
	<xsd:complexType name="RoundGlyphMarker">
		<xsd:complexContent>
			<xsd:extension base="GlyphMarker">
				<xsd:sequence>
					<xsd:element name="radius" type="xsd:int" />
					<xsd:element name="fill-color" type="Color" />
					<xsd:element name="draw-color" type="Color" minOccurs="0" />

				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<!-- Defines Round Glyph Marker -->
	<xsd:complexType name="TicTacGlyphMarker">
		<xsd:complexContent>
			<xsd:extension base="GlyphMarker">
				<xsd:sequence>
					<xsd:element name="theme-color" type="Color" />
					<xsd:element name="thickness" type="xsd:int" minOccurs="0" />
					<xsd:element name="divergence" type="xsd:int"
						minOccurs="0" />
					<xsd:element name="divergence-left" type="xsd:int"
						minOccurs="0" />
					<xsd:element name="thickness-right" type="xsd:int"
						minOccurs="0" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>


	<xsd:complexType name="AbstractCurveDraw" abstract="true">
		<xsd:sequence>
		</xsd:sequence>
	</xsd:complexType>


	<xsd:complexType name="CurveDefaultDraw">
		<xsd:complexContent>
			<xsd:extension base="AbstractCurveDraw">
				<xsd:sequence>
					<xsd:element name="color" default="Color" minOccurs="0" />
					<xsd:element name="stroke" default="Stroke" minOccurs="0" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="CurveFunction">
		<xsd:sequence>
			<xsd:element name="name" type="xsd:string" />
			<xsd:element name="theme-color" type="Color" minOccurs="0" />
			<xsd:element name="source-function" type="SourceFunction" />
			<xsd:element name="curve-draw" type="AbstractCurveDraw" />
			<xsd:element name="glyph" type="Glyph" minOccurs="0"
				maxOccurs="unbounded" />
		</xsd:sequence>
	</xsd:complexType>


	<xsd:complexType name="CurvePlugin">
		<xsd:complexContent>
			<xsd:extension base="Plugin">
				<xsd:sequence>
					<xsd:element name="curve-function" type="CurveFunction"
						minOccurs="0" maxOccurs="unbounded" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>


	<xsd:complexType name="AbstractAreaDraw" abstract="true">
		<xsd:sequence>
		</xsd:sequence>
	</xsd:complexType>


	<xsd:complexType name="AreaDefaultDraw">
		<xsd:complexContent>
			<xsd:extension base="AbstractAreaDraw">
				<xsd:sequence>
					<xsd:element name="area-color" default="Color"
						minOccurs="0" />
					<xsd:element name="area-stroke" default="Stroke"
						minOccurs="0" />
					<xsd:element name="base-color" default="Color"
						minOccurs="0" />
					<xsd:element name="base-stroke" default="Stroke"
						minOccurs="0" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="AbstractAreaFill" abstract="true">
		<xsd:sequence>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="AreaDefaultFill">
		<xsd:complexContent>
			<xsd:extension base="AbstractAreaFill">
				<xsd:sequence>
					<xsd:element name="color" type="Color" minOccurs="0" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="AreaGradientFill">
		<xsd:complexContent>
			<xsd:extension base="AbstractAreaFill">
				<xsd:sequence>
					<xsd:element name="color-1" type="Color" minOccurs="1" />
					<xsd:element name="color-2" type="Color" minOccurs="0" />
					<xsd:element name="shader" type="Shader" minOccurs="0" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="AreaFunction">
		<xsd:sequence>
			<xsd:element name="name" type="xsd:string" />
			<xsd:element name="theme-color" type="Color" minOccurs="0" />
			<xsd:element name="source-function" type="SourceFunction" />
			<xsd:element name="base" type="xsd:double" />
			<xsd:element name="area-draw" type="AbstractAreaDraw"
				minOccurs="0" />
			<xsd:element name="area-fill" type="AbstractAreaFill"
				minOccurs="0" />
			<xsd:element name="glyph" type="Glyph" minOccurs="0"
				maxOccurs="unbounded" />
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="AreaPlugin">
		<xsd:complexContent>
			<xsd:extension base="Plugin">
				<xsd:sequence>
					<xsd:element name="area-function" type="AreaFunction"
						minOccurs="0" maxOccurs="unbounded" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="ScatterFunction">
		<xsd:sequence>
			<xsd:element name="name" type="xsd:string" />
			<xsd:element name="color" type="Color" />
			<xsd:element name="stroke" type="Stroke" minOccurs="0" />
			<xsd:element name="source-function" type="SourceFunction" />
			<xsd:element name="glyph" type="Glyph" />
		</xsd:sequence>
	</xsd:complexType>


	<xsd:complexType name="ScatterPlugin">
		<xsd:complexContent>
			<xsd:extension base="Plugin">
				<xsd:sequence>
					<xsd:element name="scatter-function" type="ScatterFunction"
						minOccurs="0" maxOccurs="unbounded" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>



	<xsd:complexType name="MetricsPlugin" abstract="true">
		<xsd:complexContent>
			<xsd:extension base="Plugin">
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="MetricsFormat" abstract="true">
	</xsd:complexType>

	<xsd:complexType name="MetricsDecimal">
		<xsd:complexContent>
			<xsd:extension base="MetricsFormat">
				<xsd:sequence>
					<xsd:element name="decimal-pattern" type="xsd:string" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="MetricsDate">
		<xsd:complexContent>
			<xsd:extension base="MetricsFormat">
				<xsd:sequence>
					<xsd:element name="date-pattern" type="xsd:string" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>


	<xsd:complexType name="AxisMetricsPlugin" abstract="true">
		<xsd:complexContent>
			<xsd:extension base="MetricsPlugin">
				<xsd:sequence>
					<xsd:element name="axis">
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:enumeration value="AxisSouth" />
								<xsd:enumeration value="AxisNorth" />
								<xsd:enumeration value="AxisWest" />
								<xsd:enumeration value="AxisEast" />
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:element>
					<xsd:element name="axis-spacing" type="xsd:int"
						minOccurs="0" />
					<xsd:element name="line-paint" type="xsd:boolean"
						minOccurs="0" />
					<xsd:element name="line-color" type="Color" minOccurs="0" />
					<xsd:element name="marker-color" type="Color"
						minOccurs="0" />
					<xsd:element name="label-font" type="Font" minOccurs="0" />
					<xsd:element name="label-color" type="Color" minOccurs="0" />
					<xsd:element name="metrics-format" type="MetricsFormat"
						minOccurs="0" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="AxisStaticMetrics">
		<xsd:complexContent>
			<xsd:extension base="AxisMetricsPlugin">
				<xsd:sequence>
					<xsd:element name="metrics-count" type="xsd:int" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="AxisFlowMetrics">
		<xsd:complexContent>
			<xsd:extension base="AxisMetricsPlugin">
				<xsd:sequence>
					<xsd:element name="flow-start" type="xsd:double" />
					<xsd:element name="flow-end" type="xsd:double" />
					<xsd:element name="flow-interval" type="xsd:double" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="FreeMetricsEntry">
		<xsd:sequence>
			<xsd:element name="value" type="xsd:double" />
			<xsd:element name="text" type="xsd:string" />
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="AxisFreeMetrics">
		<xsd:complexContent>
			<xsd:extension base="AxisMetricsPlugin">
				<xsd:sequence>
					<xsd:element name="free-metric" type="FreeMetricsEntry"
						minOccurs="0" maxOccurs="unbounded" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="AxisTimeMetrics">
		<xsd:complexContent>
			<xsd:extension base="AxisMetricsPlugin">
				<xsd:sequence>
					<xsd:element name="model" minOccurs="0" maxOccurs="unbounded">
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:enumeration value="TimeModel1" />

							</xsd:restriction>
						</xsd:simpleType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:simpleType name="DimensionModelsCollection">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="Yocto" />
			<xsd:enumeration value="Zepto" />
			<xsd:enumeration value="Atto" />
			<xsd:enumeration value="Fempto" />
			<xsd:enumeration value="Pico" />
			<xsd:enumeration value="Nano" />
			<xsd:enumeration value="Micro" />
			<xsd:enumeration value="Milli" />
			<xsd:enumeration value="Centi" />
			<xsd:enumeration value="Deci" />
			<xsd:enumeration value="Identity" />
			<xsd:enumeration value="Deca" />
			<xsd:enumeration value="Hecto" />
			<xsd:enumeration value="Kilo" />
			<xsd:enumeration value="Mega" />
			<xsd:enumeration value="Giga" />
			<xsd:enumeration value="Tera" />
			<xsd:enumeration value="Peta" />
			<xsd:enumeration value="Exa" />
			<xsd:enumeration value="Zeta" />
			<xsd:enumeration value="Yotta" />
			<xsd:enumeration value="YoctoYotta" />
			<xsd:enumeration value="ZeptoZeta" />
			<xsd:enumeration value="AttoExa" />
			<xsd:enumeration value="FemptoPeta" />
			<xsd:enumeration value="PicoTera" />
			<xsd:enumeration value="NanoGiga" />
			<xsd:enumeration value="MicroMega" />
			<xsd:enumeration value="MilliKilo" />
			<xsd:enumeration value="CentiHecto" />
			<xsd:enumeration value="DeciDeca" />
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:complexType name="AxisModeledMetrics">
		<xsd:complexContent>
			<xsd:extension base="AxisMetricsPlugin">
				<xsd:sequence>
					<xsd:element name="model" type="DimensionModelsCollection"
						minOccurs="0" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="AxisMultiplierMetrics">
		<xsd:complexContent>
			<xsd:extension base="AxisMetricsPlugin">
				<xsd:sequence>
					<xsd:element name="ref" type="xsd:double" />
					<xsd:element name="multiplier" type="xsd:double" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="AxisMultiMultiplierMetrics">
		<xsd:complexContent>
			<xsd:extension base="AxisMetricsPlugin">
				<xsd:sequence>
					<xsd:element name="ref" type="xsd:double" />
					<xsd:element name="major-multiplier" type="xsd:double" />
					<xsd:element name="median-multiplier" type="xsd:double" />
					<xsd:element name="minor-multiplier" type="xsd:double" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>



	<xsd:complexType name="DeviceMetricsPlugin" abstract="true">
		<xsd:complexContent>
			<xsd:extension base="MetricsPlugin">
				<xsd:sequence>
					<xsd:element name="orientation">
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:enumeration value="vertical" />
								<xsd:enumeration value="horizontal" />
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="GridPlugin" abstract="true">
		<xsd:complexContent>
			<xsd:extension base="Plugin">
				<xsd:sequence>
					<xsd:element name="orientation">
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:enumeration value="Horizontal" />
								<xsd:enumeration value="Vertical" />
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:element>
					<xsd:element name="grid-color" type="Color" minOccurs="0" />
					<xsd:element name="grid-stroke" type="Stroke"
						minOccurs="0" />

					<xsd:element name="text-font" type="Font" minOccurs="0" />
					<xsd:element name="text-color" type="Color" minOccurs="0" />
					<xsd:element name="metrics-format" type="MetricsFormat"
						minOccurs="0" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="StaticGrid">
		<xsd:complexContent>
			<xsd:extension base="GridPlugin">
				<xsd:sequence>
					<xsd:element name="grid-count" type="xsd:int" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="FlowGrid">
		<xsd:complexContent>
			<xsd:extension base="GridPlugin">
				<xsd:sequence>
					<xsd:element name="flow-start" type="xsd:double" />
					<xsd:element name="flow-end" type="xsd:double" />
					<xsd:element name="flow-interval" type="xsd:double" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="FreeGridEntry">
		<xsd:sequence>
			<xsd:element name="value" type="xsd:double" />
			<xsd:element name="text" type="xsd:string" />
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="FreeGrid">
		<xsd:complexContent>
			<xsd:extension base="GridPlugin">
				<xsd:sequence>
					<xsd:element name="free-grid" type="FreeGridEntry"
						minOccurs="0" maxOccurs="unbounded" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="MultiplierGrid">
		<xsd:complexContent>
			<xsd:extension base="GridPlugin">
				<xsd:sequence>
					<xsd:element name="ref" type="xsd:double" />
					<xsd:element name="multiplier" type="xsd:double" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="ModeledGrid">
		<xsd:complexContent>
			<xsd:extension base="GridPlugin">
				<xsd:sequence>
					<xsd:element name="model" type="DimensionModelsCollection"
						minOccurs="0" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="SymbolPlugin">
		<xsd:complexContent>
			<xsd:extension base="Plugin">
				<xsd:sequence>
					<xsd:element name="pie" type="Pie" minOccurs="0"
						maxOccurs="unbounded" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>


	<!-- Defines Bubble Plug in -->
	<xsd:complexType name="BubblePlugin">
		<xsd:complexContent>
			<xsd:extension base="Plugin">
				<xsd:sequence>
					<xsd:element name="pie" type="Pie" minOccurs="0"
						maxOccurs="unbounded" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>


	<!-- Defines Pie Effect -->
	
	<!-- Defines Pie Effect -->
	<xsd:complexType name="PieFill" abstract="true">
		<xsd:sequence>
		</xsd:sequence>
	</xsd:complexType>
	
	<xsd:complexType name="PieLinearFill">
		<xsd:complexContent>
			<xsd:extension base="PieFill">
				<xsd:sequence>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	
	<xsd:complexType name="PieRadialFill">
		<xsd:complexContent>
			<xsd:extension base="PieFill">
				<xsd:sequence>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	
	<xsd:complexType name="PieEffect" abstract="true">
		<xsd:sequence>
		</xsd:sequence>
	</xsd:complexType>


	<xsd:complexType name="PieLinearEffect">
		<xsd:complexContent>
			<xsd:extension base="PieEffect">
				<xsd:sequence>
					<xsd:element name="incidence-angle" minOccurs="0">
						<xsd:simpleType>
							<xsd:restriction base="xsd:int">
								<xsd:minInclusive value="0" />
								<xsd:maxExclusive value="360" />
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:element>
					<xsd:element name="offset-radius" minOccurs="0">
						<xsd:simpleType>
							<xsd:restriction base="xsd:int">
								<xsd:minInclusive value="0" />
								<xsd:maxInclusive value="30" />
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	
	<xsd:complexType name="PieCubicEffect">
		<xsd:complexContent>
			<xsd:extension base="PieLinearEffect">
				<xsd:sequence>
					<xsd:element name="cubic-key" minOccurs="0">
					    <xsd:complexType>
					        <xsd:sequence>
								<xsd:element name="start-angle-delta" >
									<xsd:simpleType>
										<xsd:restriction base="xsd:int">
											<xsd:minInclusive value="20" />
											<xsd:maxInclusive value="150" />
										</xsd:restriction>
									</xsd:simpleType>
								</xsd:element>
								<xsd:element name="end-angle-delta" >
									<xsd:simpleType>
										<xsd:restriction base="xsd:int">
											<xsd:minInclusive value="20" />
											<xsd:maxInclusive value="150" />
										</xsd:restriction>
									</xsd:simpleType>
								</xsd:element>
								<xsd:element name="start-radius-fraction" >
									<xsd:simpleType>
										<xsd:restriction base="xsd:float">
											<xsd:minInclusive value="0" />
											<xsd:maxInclusive value="1" />
										</xsd:restriction>
									</xsd:simpleType>
								</xsd:element>
								<xsd:element name="end-radius-fraction" >
									<xsd:simpleType>
										<xsd:restriction base="xsd:float">
											<xsd:minInclusive value="0" />
											<xsd:maxInclusive value="1" />
										</xsd:restriction>
									</xsd:simpleType>
								</xsd:element>
							</xsd:sequence>
					    </xsd:complexType>
					</xsd:element>						
					<xsd:element name="frame" minOccurs="0" default="Wave1">
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:enumeration value="Wave1" />
								<xsd:enumeration value="Wave2" />
								<xsd:enumeration value="Wave3" />
								<xsd:enumeration value="Wave4" />
								<xsd:enumeration value="Wave5" />
								<xsd:enumeration value="Wave6" />
								<xsd:enumeration value="Moon1" />
								<xsd:enumeration value="Moon2" />
								<xsd:enumeration value="Moon3" />
								<xsd:enumeration value="Moon4" />
								<xsd:enumeration value="Round1" />
								<xsd:enumeration value="Round2" />
								<xsd:enumeration value="Round3" />
								<xsd:enumeration value="Round4" />
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>


	
	<xsd:complexType name="PieRadialEffect">
		<xsd:complexContent>
			<xsd:extension base="PieEffect">
				<xsd:sequence>
					<xsd:element name="focus-angle" minOccurs="0">
						<xsd:simpleType>
							<xsd:restriction base="xsd:int">
								<xsd:minInclusive value="0" />
								<xsd:maxExclusive value="360" />
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:element>
					<xsd:element name="focus-radius" minOccurs="0">
						<xsd:simpleType>
							<xsd:restriction base="xsd:int">
								<xsd:minInclusive value="0" />
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:element>
					<xsd:element name="offset-radius" minOccurs="0">
						<xsd:simpleType>
							<xsd:restriction base="xsd:int">
								<xsd:minInclusive value="0" />
								<xsd:maxInclusive value="30" />
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>


	<xsd:complexType name="PieCompoundEffect">
		<xsd:complexContent>
			<xsd:extension base="PieEffect">
				<xsd:sequence>
					<xsd:element name="effect" type="PieEffect" minOccurs="2"
						maxOccurs="unbounded" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>


	<xsd:complexType name="PieReflectionEffect">
		<xsd:complexContent>
			<xsd:extension base="PieEffect">
				<xsd:sequence>
					<xsd:element name="blur-enable" default="true"
						minOccurs="0" />
					<xsd:element name="mask-opacity" default="0.35"
						minOccurs="0">
						<xsd:simpleType>
							<xsd:restriction base="xsd:float">
								<xsd:minInclusive value="0" />
								<xsd:maxInclusive value="1" />
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:element>
					<xsd:element name="reflection-length" default="0.4"
						minOccurs="0">
						<xsd:simpleType>
							<xsd:restriction base="xsd:float">
								<xsd:minInclusive value="0" />
								<xsd:maxInclusive value="1" />
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>


	<xsd:complexType name="PieSliceLabel" abstract="true">
		<xsd:sequence>
			<xsd:element name="text" type="xsd:string" minOccurs="1" />
			<xsd:element name="text-color" type="Color" minOccurs="1" />
			<xsd:element name="font" type="Font" minOccurs="0" />
			<xsd:element name="text-padding-x" minOccurs="0" default="4">
				<xsd:simpleType>
					<xsd:restriction base="xsd:int">
						<xsd:minInclusive value="2" />
						<xsd:maxInclusive value="20" />
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:element>
			<xsd:element name="text-padding-y" minOccurs="0" default="2">
				<xsd:simpleType>
					<xsd:restriction base="xsd:int">
						<xsd:minInclusive value="2" />
						<xsd:maxInclusive value="10" />
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:element>
			<xsd:element name="outline-round" minOccurs="0" default="10">
				<xsd:simpleType>
					<xsd:restriction base="xsd:int">
						<xsd:minInclusive value="0" />
						<xsd:maxInclusive value="20" />
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:element>
			<xsd:element name="outline-color" type="Color" minOccurs="0" />
			<xsd:element name="outline-stroke" type="Stroke"
				minOccurs="0" />
			<xsd:element name="fill-color" type="Color" minOccurs="0" />
			<xsd:element name="shader" type="Shader" minOccurs="0" />
			<xsd:element name="style" minOccurs="0" default="Both">
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Both" />
						<xsd:enumeration value="Fill" />
						<xsd:enumeration value="Stroke" />
						<xsd:enumeration value="Nothing" />
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>


	<xsd:complexType name="PieRadialLabel">
		<xsd:complexContent>
			<xsd:extension base="PieSliceLabel">
				<xsd:sequence>
					<xsd:element name="offset-radius" default="20"
						minOccurs="0">
						<xsd:simpleType>
							<xsd:restriction base="xsd:int">
								<xsd:minInclusive value="10" />
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>


	<xsd:complexType name="PieBorderLabel">
		<xsd:complexContent>
			<xsd:extension base="PieSliceLabel">
				<xsd:sequence>
					<xsd:element name="label-margin" default="50"
						minOccurs="0">
						<xsd:simpleType>
							<xsd:restriction base="xsd:int">
								<xsd:minInclusive value="40" />
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:element>
					<xsd:element name="link-enable" type="xsd:boolean"
						default="true" minOccurs="0" />
					<xsd:element name="link-style" default="Line"
						minOccurs="0">
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:enumeration value="Line" />
								<xsd:enumeration value="Quad" />
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:element>
					<xsd:element name="link-color" type="Color" minOccurs="0" />
					<xsd:element name="link-stroke" type="Stroke"
						minOccurs="0" />
					<xsd:element name="link-extends" default="20"
						minOccurs="0">
						<xsd:simpleType>
							<xsd:restriction base="xsd:int">
								<xsd:minInclusive value="20" />
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:element>
					<xsd:element name="marker-enable" type="xsd:boolean" default="false" minOccurs="0" />						
					<xsd:element name="marker-draw" type="Color" minOccurs="0" />
					<xsd:element name="marker-fill" type="Color" minOccurs="0" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>


	<xsd:complexType name="PiePathLabel">
		<xsd:complexContent>
			<xsd:extension base="PieSliceLabel">
				<xsd:sequence>
					<xsd:element name="text-divergence" default="10"
						minOccurs="0">
						<xsd:simpleType>
							<xsd:restriction base="xsd:int">
								<xsd:minInclusive value="-40" />
								<xsd:maxInclusive value="40" />
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:element>
					<xsd:element name="text-position" default="Left"
						minOccurs="0">
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:enumeration value="Left" />
								<xsd:enumeration value="Middle" />
								<xsd:enumeration value="Right" />
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:element>
					<xsd:element name="text-side" default="Above"
						minOccurs="0">
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:enumeration value="Above" />
								<xsd:enumeration value="Over" />
								<xsd:enumeration value="Below" />
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:element>
					<xsd:element name="segment-path" default="Arc"
						minOccurs="0">
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:enumeration value="Arc" />
								<xsd:enumeration value="Start" />
								<xsd:enumeration value="End" />
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:element>
					<xsd:element name="text-shader" type="Shader"
						minOccurs="0" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>


	<xsd:complexType name="PieBoundLabel">
		<xsd:complexContent>
			<xsd:extension base="PieSliceLabel">
				<xsd:sequence>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>


	<xsd:complexType name="PieSlice">
		<xsd:sequence>
			<xsd:element name="name" type="xsd:string" minOccurs="0" />
			<xsd:element name="value" type="xsd:double" />
			<xsd:element name="divergence" type="xsd:int" default="0" />
			<xsd:element name="slice-color" type="Color" />
			<xsd:element name="label" type="PieSliceLabel" minOccurs="0"
				maxOccurs="3" />
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="Pie">
		<xsd:sequence>
			<xsd:element name="name" type="xsd:string" default="0" />
			<xsd:element name="x" type="xsd:double" default="0" />
			<xsd:element name="y" type="xsd:double" default="0" />
			<xsd:element name="radius" type="xsd:double" default="90" />
			<xsd:element name="start-angle" type="xsd:double" default="0" />				
			<xsd:element name="nature" default="User">
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="User" />
						<xsd:enumeration value="Device" />
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:element>
			<xsd:element name="fill" type="PieFill" minOccurs="0" />
			<xsd:element name="effect" type="PieEffect" minOccurs="0" />
			<xsd:element name="slice" type="PieSlice" minOccurs="1" maxOccurs="unbounded" />
				
		</xsd:sequence>
	</xsd:complexType>


	<xsd:complexType name="PiePlugin">
		<xsd:complexContent>
			<xsd:extension base="Plugin">
				<xsd:sequence>
					<xsd:element name="pie" type="Pie" minOccurs="0"
						maxOccurs="unbounded" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>



	<xsd:complexType name="AbstractDonut2DFill" abstract="true">
		<xsd:sequence>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="Donut2DDefaultFill">
		<xsd:complexContent>
			<xsd:extension base="AbstractDonut2DFill">
				<xsd:sequence>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>


	<xsd:complexType name="Donut2DRadialFill">
		<xsd:complexContent>
			<xsd:extension base="AbstractDonut2DFill">
				<xsd:sequence>
					<xsd:element name="gradient-type">
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:enumeration value="B_D_B" />
								<xsd:enumeration value="B_SC_B" />
								<xsd:enumeration value="D_SC_D" />
								<xsd:enumeration value="D_B_D" />
								<xsd:enumeration value="SC_B_SC" />
								<xsd:enumeration value="SC_D_SC" />
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="AbstractDonut2DEffect" abstract="true">
		<xsd:sequence>
		</xsd:sequence>
	</xsd:complexType>


	<xsd:complexType name="Donut2DReflectionEffect">
		<xsd:complexContent>
			<xsd:extension base="AbstractDonut2DEffect">
				<xsd:sequence>
					<xsd:element name="blur-enable" default="true"
						minOccurs="0" />
					<xsd:element name="mask-opacity" default="0.35"
						minOccurs="0">
						<xsd:simpleType>
							<xsd:restriction base="xsd:float">
								<xsd:minInclusive value="0" />
								<xsd:maxInclusive value="1" />
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:element>
					<xsd:element name="reflect-length" default="0.4"
						minOccurs="0">
						<xsd:simpleType>
							<xsd:restriction base="xsd:float">
								<xsd:minInclusive value="0" />
								<xsd:maxInclusive value="1" />
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>


	<xsd:complexType name="Donut2DLinearEffect">
		<xsd:complexContent>
			<xsd:extension base="AbstractDonut2DEffect">
				<xsd:sequence>
					<xsd:element name="incidence-angle" minOccurs="0">
						<xsd:simpleType>
							<xsd:restriction base="xsd:int">
								<xsd:minInclusive value="0" />
								<xsd:maxExclusive value="360" />
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:element>
					<xsd:element name="offset-radius" minOccurs="0">
						<xsd:simpleType>
							<xsd:restriction base="xsd:int">
								<xsd:minInclusive value="0" />
								<xsd:maxInclusive value="30" />
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>


	<xsd:complexType name="Donut2DCompoundEffect">
		<xsd:complexContent>
			<xsd:extension base="AbstractDonut2DEffect">
				<xsd:sequence>
					<xsd:element name="effect" type="AbstractDonut2DEffect"
						minOccurs="2" maxOccurs="unbounded" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="AbstractDonut2DDraw" abstract="true">
		<xsd:sequence>
		</xsd:sequence>
	</xsd:complexType>


	<xsd:complexType name="Donut2DDefaultDraw">
		<xsd:complexContent>
			<xsd:extension base="AbstractDonut2DDraw">
				<xsd:sequence>
					<xsd:element name="color" default="Color" minOccurs="0" />
					<xsd:element name="stroke" default="Stroke" minOccurs="0" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>


	<xsd:complexType name="Donut2DSliceLabel" abstract="true">
		<xsd:sequence>
			<xsd:element name="text" type="xsd:string" minOccurs="1" />
			<xsd:element name="text-color" type="Color" minOccurs="1" />
			<xsd:element name="font" type="Font" minOccurs="0" />
			<xsd:element name="text-padding-x" minOccurs="0" default="4">
				<xsd:simpleType>
					<xsd:restriction base="xsd:int">
						<xsd:minInclusive value="2" />
						<xsd:maxInclusive value="20" />
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:element>
			<xsd:element name="text-padding-y" minOccurs="0" default="2">
				<xsd:simpleType>
					<xsd:restriction base="xsd:int">
						<xsd:minInclusive value="2" />
						<xsd:maxInclusive value="10" />
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:element>
			<xsd:element name="outline-round" minOccurs="0" default="10">
				<xsd:simpleType>
					<xsd:restriction base="xsd:int">
						<xsd:minInclusive value="0" />
						<xsd:maxInclusive value="20" />
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:element>
			<xsd:element name="outline-color" type="Color" minOccurs="0" />
			<xsd:element name="outline-stroke" type="Stroke"
				minOccurs="0" />
			<xsd:element name="fill-color" type="Color" minOccurs="0" />
			<xsd:element name="shader" type="Shader" minOccurs="0" />
			<xsd:element name="style" minOccurs="0" default="both">
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="both" />
						<xsd:enumeration value="fill" />
						<xsd:enumeration value="draw" />
						<xsd:enumeration value="nothing" />
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>


	<xsd:complexType name="Donut2DRadialLabel">
		<xsd:complexContent>
			<xsd:extension base="Donut2DSliceLabel">
				<xsd:sequence>
					<xsd:element name="offset-radius" default="20"
						minOccurs="0">
						<xsd:simpleType>
							<xsd:restriction base="xsd:int">
								<xsd:minInclusive value="10" />
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>


	<xsd:complexType name="Donut2DBorderLabel">
		<xsd:complexContent>
			<xsd:extension base="Donut2DSliceLabel">
				<xsd:sequence>
					<xsd:element name="label-margin" default="50"
						minOccurs="0">
						<xsd:simpleType>
							<xsd:restriction base="xsd:int">
								<xsd:minInclusive value="40" />
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:element>
					<xsd:element name="link-enable" type="xsd:boolean"
						default="true" minOccurs="0" />
					<xsd:element name="link-style" default="line"
						minOccurs="0">
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:enumeration value="line" />
								<xsd:enumeration value="quad" />
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:element>
					<xsd:element name="link-color" type="Color" minOccurs="0" />
					<xsd:element name="link-stroke" type="Stroke"
						minOccurs="0" />
					<xsd:element name="link-extends" default="20"
						minOccurs="0">
						<xsd:simpleType>
							<xsd:restriction base="xsd:int">
								<xsd:minInclusive value="20" />
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:element>
					<xsd:element name="marker-enable" type="xsd:boolean"
						default="false" minOccurs="0" />
					<xsd:element name="marker-draw" type="Color" minOccurs="0" />
					<xsd:element name="marker-fill" type="Color" minOccurs="0" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>


	<xsd:complexType name="Donut2DPathLabel">
		<xsd:complexContent>
			<xsd:extension base="Donut2DSliceLabel">
				<xsd:sequence>
					<xsd:element name="text-divergence" default="10"
						minOccurs="0">
						<xsd:simpleType>
							<xsd:restriction base="xsd:int">
								<xsd:minInclusive value="-40" />
								<xsd:maxInclusive value="40" />
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:element>
					<xsd:element name="text-position" default="left"
						minOccurs="0">
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:enumeration value="left" />
								<xsd:enumeration value="middle" />
								<xsd:enumeration value="right" />
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:element>
					<xsd:element name="text-side" default="above"
						minOccurs="0">
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:enumeration value="above" />
								<xsd:enumeration value="over" />
								<xsd:enumeration value="below" />
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:element>
					<xsd:element name="segment-path" default="arc"
						minOccurs="0">
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:enumeration value="arc" />
								<xsd:enumeration value="start" />
								<xsd:enumeration value="end" />
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:element>
					<xsd:element name="text-shader" type="Shader"
						minOccurs="0" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>


	<xsd:complexType name="Donut2DSlice">
		<xsd:sequence>
			<xsd:element name="name" type="xsd:string" />
			<xsd:element name="value" type="xsd:double" />
			<xsd:element name="divergence" type="xsd:int" default="0" />
			<xsd:element name="slice-color" type="Color" />
			<xsd:element name="label" type="Donut2DSliceLabel"
				minOccurs="0" maxOccurs="3" />
		</xsd:sequence>
	</xsd:complexType>

	<!-- Defines Donut2D -->
	<xsd:complexType name="Donut2D">
		<xsd:sequence>
			<xsd:element name="name" type="xsd:string" default="donut2d" />
			<xsd:element name="x" type="xsd:double" default="0" />
			<xsd:element name="y" type="xsd:double" default="0" />
			<xsd:element name="inner-radius" type="xsd:double"
				default="90" />
			<xsd:element name="outer-radius" type="xsd:double"
				default="140" />
			<xsd:element name="start-angle" type="xsd:double"
				default="0" />
			<xsd:element name="nature" default="user">
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="user" />
						<xsd:enumeration value="device" />
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:element>
			<xsd:element name="draw" type="AbstractDonut2DDraw"
				minOccurs="0" />
			<xsd:element name="fill" type="AbstractDonut2DFill"
				minOccurs="0" />
			<xsd:element name="effect" type="AbstractDonut2DEffect"
				minOccurs="0" />
			<xsd:element name="slice" type="Donut2DSlice" minOccurs="1"
				maxOccurs="unbounded" />
		</xsd:sequence>
	</xsd:complexType>


	<xsd:complexType name="Donut2DPlugin">
		<xsd:complexContent>
			<xsd:extension base="Plugin">
				<xsd:sequence>
					<xsd:element name="donut2d" type="Donut2D" minOccurs="0"
						maxOccurs="unbounded" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>



	<xsd:complexType name="Donut3DPaint" abstract="true">
		<xsd:sequence>
		</xsd:sequence>
	</xsd:complexType>


	<xsd:complexType name="Donut3DDefaultPaint">
		<xsd:complexContent>
			<xsd:extension base="Donut3DPaint">
				<xsd:sequence>
					<xsd:element name="incidence-effect-angle" minOccurs="0"
						default="90">
						<xsd:simpleType>
							<xsd:restriction base="xsd:int">
								<xsd:minInclusive value="0" />
								<xsd:maxExclusive value="360" />
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:element>
					<xsd:element name="top-effect-enable" type="xsd:boolean"
						minOccurs="0" default="true" />
					<xsd:element name="inner-effect-enable" type="xsd:boolean"
						minOccurs="0" default="true" />
					<xsd:element name="outer-effect-enable" type="xsd:boolean"
						minOccurs="0" default="true" />
					<xsd:element name="slice-fill-alpha" minOccurs="0"
						default="0.7">
						<xsd:simpleType>
							<xsd:restriction base="xsd:float">
								<xsd:minInclusive value="0" />
								<xsd:maxInclusive value="1" />
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:element>
					<xsd:element name="top-effect-alpha" minOccurs="0"
						default="0.8">
						<xsd:simpleType>
							<xsd:restriction base="xsd:float">
								<xsd:minInclusive value="0" />
								<xsd:maxInclusive value="1" />
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:element>
					<xsd:element name="inner-effect-alpha" minOccurs="0"
						default="1">
						<xsd:simpleType>
							<xsd:restriction base="xsd:float">
								<xsd:minInclusive value="0" />
								<xsd:maxInclusive value="1" />
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:element>
					<xsd:element name="outer-effect-alpha" minOccurs="0"
						default="1">
						<xsd:simpleType>
							<xsd:restriction base="xsd:float">
								<xsd:minInclusive value="0" />
								<xsd:maxInclusive value="1" />
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>


	<xsd:complexType name="Donut3DSliceLabel" abstract="true">
		<xsd:sequence>
			<xsd:element name="text" type="xsd:string" minOccurs="1" />
			<xsd:element name="text-color" type="Color" minOccurs="1" />
			<xsd:element name="font" type="Font" minOccurs="0" />
			<xsd:element name="text-padding-x" minOccurs="0" default="4">
				<xsd:simpleType>
					<xsd:restriction base="xsd:int">
						<xsd:minInclusive value="2" />
						<xsd:maxInclusive value="20" />
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:element>
			<xsd:element name="text-padding-y" minOccurs="0" default="2">
				<xsd:simpleType>
					<xsd:restriction base="xsd:int">
						<xsd:minInclusive value="2" />
						<xsd:maxInclusive value="10" />
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:element>
			<xsd:element name="outline-round" minOccurs="0" default="10">
				<xsd:simpleType>
					<xsd:restriction base="xsd:int">
						<xsd:minInclusive value="0" />
						<xsd:maxInclusive value="20" />
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:element>
			<xsd:element name="outline-color" type="Color" minOccurs="0" />
			<xsd:element name="outline-stroke" type="Stroke"
				minOccurs="0" />
			<xsd:element name="fill-color" type="Color" minOccurs="0" />
			<xsd:element name="shader" type="Shader" minOccurs="0" />
			<xsd:element name="style" minOccurs="0" default="both">
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="both" />
						<xsd:enumeration value="fill" />
						<xsd:enumeration value="draw" />
						<xsd:enumeration value="nothing" />
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>


	<xsd:complexType name="Donut3DRadialLabel">
		<xsd:complexContent>
			<xsd:extension base="Donut3DSliceLabel">
				<xsd:sequence>
					<xsd:element name="offset-radius" default="20"
						minOccurs="0">
						<xsd:simpleType>
							<xsd:restriction base="xsd:int">
								<xsd:minInclusive value="10" />
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>


	<xsd:complexType name="Donut3DBorderLabel">
		<xsd:complexContent>
			<xsd:extension base="Donut3DSliceLabel">
				<xsd:sequence>
					<xsd:element name="label-margin" default="40"
						minOccurs="0">
						<xsd:simpleType>
							<xsd:restriction base="xsd:int">
								<xsd:minInclusive value="40" />
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:element>
					<xsd:element name="link-enable" type="xsd:boolean"
						default="true" minOccurs="0" />
					<xsd:element name="link-style" default="line"
						minOccurs="0">
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:enumeration value="line" />
								<xsd:enumeration value="quad" />
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:element>
					<xsd:element name="link-alignment" default="top"
						minOccurs="0">
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:enumeration value="top" />
								<xsd:enumeration value="middle" />
								<xsd:enumeration value="bottom" />
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:element>
					<xsd:element name="link-color" type="Color" minOccurs="0" />
					<xsd:element name="link-stroke" type="Stroke"
						minOccurs="0" />
					<xsd:element name="link-extends" default="20"
						minOccurs="0">
						<xsd:simpleType>
							<xsd:restriction base="xsd:int">
								<xsd:minInclusive value="20" />
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:element>
					<xsd:element name="marker-enable" type="xsd:boolean"
						default="true" minOccurs="0" />
					<xsd:element name="marker-draw" type="Color" minOccurs="0" />
					<xsd:element name="marker-fill" type="Color" minOccurs="0" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>


	<xsd:complexType name="Donut3DPathLabel">
		<xsd:complexContent>
			<xsd:extension base="Donut3DSliceLabel">
				<xsd:sequence>
					<xsd:element name="text-divergence" default="10"
						minOccurs="0">
						<xsd:simpleType>
							<xsd:restriction base="xsd:int">
								<xsd:minInclusive value="-40" />
								<xsd:maxInclusive value="40" />
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:element>
					<xsd:element name="text-position" default="left"
						minOccurs="0">
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:enumeration value="left" />
								<xsd:enumeration value="middle" />
								<xsd:enumeration value="right" />
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:element>
					<xsd:element name="text-side" default="above"
						minOccurs="0">
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:enumeration value="above" />
								<xsd:enumeration value="over" />
								<xsd:enumeration value="below" />
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:element>
					<xsd:element name="segment-path" default="arc"
						minOccurs="0">
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:enumeration value="arc" />
								<xsd:enumeration value="start" />
								<xsd:enumeration value="end" />
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:element>
					<xsd:element name="text-shader" type="Shader"
						minOccurs="0" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>


	<xsd:complexType name="Donut3DSlice">
		<xsd:sequence>
			<xsd:element name="name" type="xsd:string" />
			<xsd:element name="value" type="xsd:double" />
			<xsd:element name="divergence" type="xsd:int" default="0" />
			<xsd:element name="slice-color" type="Color" />
			<xsd:element name="label" type="Donut3DSliceLabel"
				minOccurs="0" maxOccurs="3" />
		</xsd:sequence>
	</xsd:complexType>


	<xsd:complexType name="Donut3D">
		<xsd:sequence>
			<xsd:element name="name" type="xsd:string" default="donut3d" />
			<xsd:element name="x" type="xsd:double" default="0" />
			<xsd:element name="y" type="xsd:double" default="0" />
			<xsd:element name="inner-radius" type="xsd:double"
				default="90" />
			<xsd:element name="outer-radius" type="xsd:double"
				default="140" />
			<xsd:element name="thickness" type="xsd:double" default="60" />
			<xsd:element name="tilt" default="40">
				<xsd:simpleType>
					<xsd:restriction base="xsd:double">
						<xsd:minInclusive value="0" />
						<xsd:maxInclusive value="90" />
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:element>
			<xsd:element name="start-angle" type="xsd:double"
				default="0" />
			<xsd:element name="nature" default="user">
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="user" />
						<xsd:enumeration value="device" />
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:element>
			<xsd:element name="paint" type="Donut3DPaint" minOccurs="0" />
			<xsd:element name="slice" type="Donut3DSlice" minOccurs="1"
				maxOccurs="unbounded" />
		</xsd:sequence>
	</xsd:complexType>


	<xsd:complexType name="Donut3DPlugin">
		<xsd:complexContent>
			<xsd:extension base="Plugin">
				<xsd:sequence>
					<xsd:element name="donut3d" type="Donut3D" minOccurs="0"
						maxOccurs="unbounded" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>


	<xsd:complexType name="OutlinePlugin">
		<xsd:complexContent>
			<xsd:extension base="Plugin">
				<xsd:sequence>
					<xsd:element name="outline-color" type="Color"
						minOccurs="0" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>



	<xsd:complexType name="ZoomBoxPlugin">
		<xsd:complexContent>
			<xsd:extension base="Plugin">
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="ZoomWheelPlugin">
		<xsd:complexContent>
			<xsd:extension base="Plugin">
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="ZoomObjectifPlugin">
		<xsd:complexContent>
			<xsd:extension base="Plugin">
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="TranslatePlugin">
		<xsd:complexContent>
			<xsd:extension base="Plugin">
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="LegendConstraints">
		<xsd:sequence>
			<xsd:element name="position" default="south">
				<xsd:simpleType>
					<xsd:restriction base="xsd:string" >
						<xsd:enumeration value="south" />
						<xsd:enumeration value="north" />
						<xsd:enumeration value="west" />
						<xsd:enumeration value="east" />
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:element>
			<xsd:element name="alignment" default="right">
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="left" />
						<xsd:enumeration value="middle" />
						<xsd:enumeration value="right" />
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:element>
			<xsd:element name="depth" default="0.5">
				<xsd:simpleType>
					<xsd:restriction base="xsd:float">
						<xsd:minInclusive value="0" />
						<xsd:maxInclusive value="1" />
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="Legend">
		<xsd:sequence>
			<xsd:element name="text" default="xsd:string" />
			<xsd:element name="theme-color" default="Color"
				minOccurs="0" />
			<xsd:element name="font" default="Font" minOccurs="0" />
			<xsd:element name="color-1" default="Color" />
			<xsd:element name="color-2" default="Color" minOccurs="0" />
			<xsd:element name="constraints" type="LegendConstraints"
				minOccurs="0" />
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="LegendPlugin">
		<xsd:complexContent>
			<xsd:extension base="Plugin">
				<xsd:sequence>
					<xsd:element name="legend" type="Legend" maxOccurs="unbounded" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="Plugin" abstract="true">
		<xsd:attribute name="id" type="xsd:string" use="optional" />
		<xsd:attribute name="name" type="xsd:string" use="optional" />
		<xsd:attribute name="class" type="xsd:string" use="optional" />
	</xsd:complexType>

	<xsd:complexType name="Window2D" abstract="true">
		<xsd:sequence>
			<xsd:element name="id" type="xsd:string" />
			<xsd:element name="name" type="xsd:string" />
			<xsd:element name="theme-color" type="Color" minOccurs="0" />
			<xsd:element name="plugin" type="Plugin" minOccurs="0"
				maxOccurs="unbounded" />
		</xsd:sequence>
	</xsd:complexType>


	<xsd:complexType name="Window2DLinear">
		<xsd:complexContent>
			<xsd:extension base="Window2D">
				<xsd:sequence>
					<xsd:element name="min-x" type="xsd:double" />
					<xsd:element name="max-x" type="xsd:double" />
					<xsd:element name="min-y" type="xsd:double" />
					<xsd:element name="max-y" type="xsd:double" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>


	<xsd:complexType name="Window2DLogX">
		<xsd:complexContent>
			<xsd:extension base="Window2DLinear">
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="Window2DLogY">
		<xsd:complexContent>
			<xsd:extension base="Window2DLinear">
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="Window2DLog">
		<xsd:complexContent>
			<xsd:extension base="Window2DLinear">
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="Window2DTimeX">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">
				minx and maxx from
				parent Window2DLinear will be ignored
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="Window2DLinear">
				<xsd:sequence>
					<xsd:element name="min-x-datetime" type="xsd:dateTime" />
					<xsd:element name="max-x-datetime" type="xsd:dateTime" />
				</xsd:sequence>
			</xsd:extension>

		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="Window2DTimeY">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">
				miny and maxy from
				parent Window2DLinear will be ignored
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="Window2DLinear">
				<xsd:sequence>
					<xsd:element name="min-y-datetime" type="xsd:dateTime" />
					<xsd:element name="max-y-datetime" type="xsd:dateTime" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="View2D">
		<xsd:sequence>
			<xsd:element name="view-key" type="xsd:string" />
			<xsd:element name="api-key">
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:length value="36" fixed="true" />
						<xsd:pattern
							value="[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-4[0-9a-fA-F]{3}-[8-9a-bA-B][0-9a-fA-F]{3}-[0-9a-fA-F]{12}" />
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:element>
			<xsd:element name="width" type="xsd:int" />
			<xsd:element name="height" type="xsd:int" />
			<xsd:element name="west" type="xsd:int" />
			<xsd:element name="east" type="xsd:int" />
			<xsd:element name="north" type="xsd:int" />
			<xsd:element name="south" type="xsd:int" />
			<xsd:element name="background" type="ViewBackground"
				minOccurs="0" maxOccurs="1" />
			<xsd:element name="window2d" type="Window2D" minOccurs="0"
				maxOccurs="unbounded" />
		</xsd:sequence>
	</xsd:complexType>

	<!-- Defines Color Object -->
	<xsd:complexType name="ViewBackground">
		<xsd:sequence>
			<xsd:element name="outline-round">
				<xsd:simpleType>
					<xsd:restriction base="xsd:int">
						<xsd:minInclusive value="0" />
						<xsd:maxInclusive value="20" />
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:element>
			<xsd:element name="outline-color" type="Color" minOccurs="0" />
			<xsd:element name="outline-stroke" type="Stroke"
				minOccurs="0" />
			<xsd:element name="background-shader" type="Shader" />
		</xsd:sequence>
	</xsd:complexType>

	<!-- Defines Color Object -->
	<xsd:complexType name="Color">
		<xsd:sequence>
			<xsd:element name="r">
				<xsd:simpleType>
					<xsd:restriction base="xsd:int">
						<xsd:minInclusive value="0" />
						<xsd:maxInclusive value="255" />
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:element>
			<xsd:element name="g">
				<xsd:simpleType>
					<xsd:restriction base="xsd:int">
						<xsd:minInclusive value="0" />
						<xsd:maxInclusive value="255" />
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:element>
			<xsd:element name="b">
				<xsd:simpleType>
					<xsd:restriction base="xsd:int">
						<xsd:minInclusive value="0" />
						<xsd:maxInclusive value="255" />
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:element>
			<xsd:element name="a" default="255">
				<xsd:simpleType>
					<xsd:restriction base="xsd:int">
						<xsd:minInclusive value="0" />
						<xsd:maxInclusive value="255" />
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>

	<!-- Defines Shader Object -->
	<xsd:complexType name="Shader">
		<xsd:sequence>
			<xsd:element name="shaderEntry" minOccurs="2" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="f">
							<xsd:simpleType>
								<xsd:restriction base="xsd:float">
									<xsd:minInclusive value="0" />
									<xsd:maxInclusive value="1" />
								</xsd:restriction>
							</xsd:simpleType>
						</xsd:element>
						<xsd:element name="c" type="Color" />
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>

	<!-- Defines Color Object -->
	<xsd:complexType name="Stroke">
		<xsd:sequence>
			<xsd:element name="width" type="xsd:float" />
			<xsd:element name="join" minOccurs="0">
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="miter" />
						<xsd:enumeration value="round" />
						<xsd:enumeration value="bevel" />
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:element>
			<xsd:element name="cap" minOccurs="0">
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="butt" />
						<xsd:enumeration value="round" />
						<xsd:enumeration value="square" />
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:element>
			<xsd:element name="miterlimit" type="xsd:float"
				minOccurs="0" />
			<xsd:element name="dash" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="dashEntry" type="xsd:float"
							minOccurs="0" maxOccurs="unbounded" />
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="dash_phase" type="xsd:float"
				minOccurs="0" />
		</xsd:sequence>
	</xsd:complexType>

	<!-- Defines Font Object -->
	<xsd:simpleType name="Font">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="neuropol" />
			<xsd:enumeration value="element" />
			<xsd:enumeration value="nomove" />
		</xsd:restriction>
	</xsd:simpleType>

</xsd:schema>